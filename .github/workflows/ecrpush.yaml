name: Push Docker Image to Amazon ECR and Deploy to ECS

on:
  push:
    branches:
      - master  # Trigger this action only on pushes to the master branch

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repo
        uses: actions/checkout@v3

      # Step 2: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      # Step 3: Login to Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # Step 4: Build, tag, and push Docker image to Amazon ECR
      - name: Build, tag, and push Docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: my-picture-gallery-repository
          IMAGE_TAG: picturegalleryfrontend
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

          # Step 5: Register a new ECS task definition with task-level CPU and memory
      - name: Register ECS task definition
        id: register-task-def
        run: |
          echo "Registering new ECS task definition..."

          NEW_TASK_DEF=$(aws ecs register-task-definition \
            --family fargatefrontnd \
            --network-mode awsvpc \
            --requires-compatibilities FARGATE \
            --execution-role-arn arn:aws:iam::050752639856:role/ecsTaskExecutionRole \
            --task-role-arn arn:aws:iam::050752639856:role/eviroment-setup-final-lab-FargateTaskRole-fyr87ELYVRxh \
            --cpu 256 \
            --memory 512 \
            --container-definitions "$(jq -n --arg image "$REGISTRY/$REPOSITORY:$IMAGE_TAG" '[
              {
                "name": "frontend-picture-gallery",
                "image": $image,
                "essential": true,
                "memory": 512,
                "cpu": 256,
                "portMappings": [
            {
              "containerPort": 8080,
              "hostPort": 8080,
              "protocol": "tcp"
            }
          ]
              }
            ]')"
          )

          echo "Task Definition Response: $NEW_TASK_DEF"

          # Extract the task definition ARN
          TASK_DEF_ARN=$(echo "$NEW_TASK_DEF" | jq -r '.taskDefinition.taskDefinitionArn')

          echo "Task definition revision ARN: $TASK_DEF_ARN"
          echo "TASK_DEF_ARN=$TASK_DEF_ARN" >> $GITHUB_ENV

      # Step 6: Update ECS service
      - name: Update ECS service
        run: |
          aws ecs update-service \
            --cluster picture-gallery-frontend \
            --service frontendpicturegallery \
            --task-definition $TASK_DEF_ARN \
            --region eu-west-1


    